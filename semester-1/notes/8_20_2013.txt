baseConversionsDecimal Binary:
	Main idea: 
		any number can be represented by multiplying each digit by its base raised to the digits position, eg:
		
		1001001 
			in base 2:
				1 * 2^6 | 64
			+	0 * 2^5 | 0
			+	0 * 2^4 | 0
			+	1 * 2^3 | 8
			+	0 * 2^2 | 0
			+	0 * 2^1 | 0
			+	1 * 2^0 | 1
				------------
						| 73
			in base 10:
				1 * 10^6 | 1000000
			+	0 * 10^5 | 0
			+	0 * 10^4 | 0
			+	1 * 10^3 | 1000
			+	0 * 10^2 | 0
			+	0 * 10^1 | 0
			+	1 * 10^0 | 1
				------------------
						 | 1001001

HexDecimalConversion:
	What I learned:
		converting from base16 to base10:
			A5C2 in base10:
				A * 16^3 | 40960
			+	5 * 16^2 | 1280
			+	C * 16^1 | 192
			+ 	2 * 16^0 | 2
			--------------------
						 | 42434	 

		converting from base10 to base16:
			134 in base16:
							8	6
				-----------------
				40960	256 16	1

PrecedenceAssignmentOp:
	Main Idea:
		Assignment:

			x = x + 5 OR x+=5
			x = x - 5 OR x-=5
			x = x * 5 OR x*=5
			x = x / 5 OR x/=5
			x = x % 5 OR x%=5
			x = x + 1 OR ++x OR x++
			x = x - 1 OR --x OR x--

		postincrement vs preincrement:
			operators after the variable (x++, x--) will affect the number AFTER the assignment
			operators before the variable (++x, --x) will affect the number as it is assigned

				int x = 5, y = 5;

				System.out.println(++x); 	// outputs 6
				System.out.println(x); 		// outputs 6

				System.out.println(y++); 	// outputs 5
				System.out.println(y); 		// outputs 6





